[{"D:\\cicd\\vite-project\\vite-project\\cicc\\src\\App.test.tsx":"1","D:\\cicd\\vite-project\\vite-project\\cicc\\src\\App.tsx":"2","D:\\cicd\\vite-project\\vite-project\\cicc\\src\\main.tsx":"3","D:\\cicd\\vite-project\\vite-project\\cicc\\src\\vite-env.d.ts":"4"},{"size":504,"mtime":1688622135540,"results":"5","hashOfConfig":"6"},{"size":1183,"mtime":1688622774111,"results":"7","hashOfConfig":"6"},{"size":249,"mtime":1688622135607,"results":"8","hashOfConfig":"6"},{"size":38,"mtime":1688538377011,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},"1xm48dx",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\cicd\\vite-project\\vite-project\\cicc\\src\\App.test.tsx",["25"],[],"import { render, screen, fireEvent } from '@testing-library/react'\nimport App from './App'\n\ntest('props is avaliable', () => {\n  const value = '123'\n  // 为了多写点测试用例，我给App组件加了个prop\n  render(<App value={value} />)\n  expect(screen.getByRole('props')).toHaveTextContent(value)\n})\n\ntest('click of button is avaliable', () => {\n  render(<App value=\"123\" />)\n  fireEvent.click(screen.getByRole('button'))\n  expect(screen.getByRole('button')).toHaveTextContent(`count is: 1`)\n})\n","D:\\cicd\\vite-project\\vite-project\\cicc\\src\\App.tsx",["26"],[],"import type { FC } from 'react'\nimport { useState } from 'react'\nimport reactLogo from './assets/react.svg'\nimport viteLogo from '/vite.svg'\nimport './App.css'\n\ninterface Props {\n  value?: string\n}\n\nconst App: FC<Props> = ({ value }) => {\n  const [count, setCount] = useState(0)\n\n  return (\n    <>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={reactLogo} className=\"App-logo\" alt=\"logo\" />\n          <img src={viteLogo} className=\"App-logo\" alt=\"logo\" />\n          <p>Hello Vite + React!!!!!!!!</p>\n          <p>\n            {/*\n            测试代码中需要获取的DOM元素用role属性标记，这里的role属性只会在测试代码中用到，\n            这样子就可以避免代码因需求改动时，因DOM属性改变导致测试不通过。有利于TDD（测试驱动开发）开发的进行\n          */}\n            <button\n              role=\"button\"\n              type=\"button\"\n              onClick={() => setCount((v) => v + 1)}\n            >\n              count is: {count}\n            </button>\n          </p>\n          <p role=\"props\">{value}</p>\n        </header>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","D:\\cicd\\vite-project\\vite-project\\cicc\\src\\main.tsx",["27"],[],"import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n","D:\\cicd\\vite-project\\vite-project\\cicc\\src\\vite-env.d.ts",[],[],{"ruleId":null,"fatal":true,"severity":2,"message":"28","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"28","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"28","line":1,"column":1,"nodeType":null},"Parsing error: The keyword 'import' is reserved"]